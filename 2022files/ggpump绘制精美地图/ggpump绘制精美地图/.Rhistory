mutate(
forest_ha = 4200000000 * (forest_area/100) / 1000000
) |>
select(entity, forest_ha)
forest_area <-
read_csv("data.txt") %>%
filter(year == 2020) |>
mutate(
forest_ha = 4200000000 * (forest_area/100) / 1000000
) |>
select(entity, forest_ha)
line_data <-
points |>
left_join(forest_area, by=c("country" = "entity")) |>
slice_max(forest_ha, n=15) |>
mutate(
col_y = rank(forest_ha) |> data_rescale(to=c(40, 70)),
sigmoid_end = 52,
col_x_start = 55,
col_x_end = forest_ha |> data_rescale(to=c(55, 130), range = c(0, max(forest_ha))),
area_label = paste0(round(forest_ha, 1), " million ha")
)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(
aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)
) +
geom_text(
aes(label=country, x=sigmoid_end, y=col_y),
hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8
) +
geom_segment(
aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),
size=3
) +
geom_text(
aes(label=area_label, x=col_x_end, y=col_y),
hjust=0, size=2.2, nudge_x = .3
) +
labs(
title="European countries with the largest forests",
subtitle = "",
caption = "Source: Our world in data \nRussia excluded because of lack of fine grained data"
) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
library(ggbump)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(
aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)
) +
geom_text(
aes(label=country, x=sigmoid_end, y=col_y),
hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8
) +
geom_segment(
aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),
size=3
) +
geom_text(
aes(label=area_label, x=col_x_end, y=col_y),
hjust=0, size=2.2, nudge_x = .3
) +
labs(
title="European countries with the largest forests",
subtitle = "",
caption = "Source: Our world in data \nRussia excluded because of lack of fine grained data"
) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(
aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)
) +
geom_text(
aes(label=country, x=sigmoid_end, y=col_y),
hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8
) +
geom_segment(
aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),
size=3
) +
geom_text(
aes(label=area_label, x=col_x_end, y=col_y),
hjust=0, size=2.2, nudge_x = .3
) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
library(tidyverse)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(datawizard)
library(MetBrewer)
library(ggbump)
theme_deforestation = function() {
theme_void() +
theme(
plot.margin = margin(.5, 1, .5, .5, "cm"),
plot.background = element_rect(fill = "lightblue1"),
plot.title = element_text(family = "Roboto Condensed", size = 18, hjust=0.5),
plot.caption = element_text(family = "Roboto Condensed", size = 6),
axis.text.y.left = element_blank(),
axis.text.x.bottom = element_blank(),
legend.position = "none",
text=element_text(family = "Roboto Condensed")
)
}
world <- ne_countries(scale = "medium", returnclass = "sf")
map <- world %>%
filter(continent == "Europe", iso_a2 != "RU") %>%
st_crop(xmin = -24, xmax = 40, ymin = 33, ymax = 74)
ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
theme_deforestation()
points <- map |>
st_point_on_surface() |>
st_coordinates() |>
as_tibble() |>
mutate( country = map$name_long )
ggplot(points) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y)) +
geom_text(
aes(x=X, y=Y, label=country),
hjust=0, nudge_x=1, check_overlap=TRUE
) +
theme_deforestation()
forest_area <-
read_csv("data.txt") %>%
filter(year == 2020) |>
mutate(
forest_ha = 4200000000 * (forest_area/100) / 1000000
) |>
select(entity, forest_ha)
line_data <-
points |>
left_join(forest_area, by=c("country" = "entity")) |>
slice_max(forest_ha, n=15) |>
mutate(
col_y = rank(forest_ha) |> data_rescale(to=c(40, 70)),
sigmoid_end = 52,
col_x_start = 55,
col_x_end = forest_ha |> data_rescale(to=c(55, 130), range = c(0, max(forest_ha))),
area_label = paste0(round(forest_ha, 1), " million ha")
)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(
aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)
) +
geom_text(
aes(label=country, x=sigmoid_end, y=col_y),
hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8
) +
geom_segment(
aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),
size=3
) +
geom_text(
aes(label=area_label, x=col_x_end, y=col_y),
hjust=0, size=2.2, nudge_x = .3
) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(
aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)
) +
geom_text(
aes(label=country, x=sigmoid_end, y=col_y),
hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8
) +
geom_segment(
aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),
size=3
)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(
aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)
)
ggplot(line_data)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off")
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off")
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
theme_deforestation = function() {
theme_void() +
theme(
plot.margin = margin(.5, 1, .5, .5, "cm"),
plot.background = element_rect(fill = "lightblue1"),
plot.title = element_text(family = "Roboto Condensed", size = 18, hjust=0.5),
plot.caption = element_text(family = "Roboto Condensed", size = 6),
axis.text.y.left = element_blank(),
axis.text.x.bottom = element_blank(),
legend.position = "none",
text=element_text(family = "Roboto Condensed")
)
}
world <- ne_countries(scale = "medium", returnclass = "sf")
map <- world %>%
filter(continent == "Europe", iso_a2 != "RU") %>%
st_crop(xmin = -24, xmax = 40, ymin = 33, ymax = 74)
ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
theme_deforestation()
points <- map %>% st_point_on_surface() %>% st_coordinates() %>% as_tibble() %>%
mutate(country=map$name_long)
ggplot(points) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y)) +
geom_text(aes(x=X, y=Y,label=country),hjust=0, nudge_x=1, check_overlap=TRUE) +
theme_deforestation()
forest_area <- read_csv("data.txt") %>% filter(year == 2020) %>%
mutate(forest_ha = 4200000000 * (forest_area/100) / 1000000) %>%
select(entity, forest_ha)
line_data <-
points %>% left_join(forest_area, by=c("country" = "entity")) %>%
slice_max(forest_ha, n=15) %>%
mutate(col_y = rank(forest_ha) %>% data_rescale(to=c(40, 70)),sigmoid_end = 52,
col_x_start = 55,col_x_end = forest_ha %>% data_rescale(to=c(55, 130), range = c(0, max(forest_ha))),
area_label = paste0(round(forest_ha, 1), " million ha"))
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
read_csv("data.txt") %>% filter(year == 2020) %>%
mutate(forest_ha = 4200000000 * (forest_area/100) / 1000000) %>%
select(entity, forest_ha)
points %>% left_join(forest_area, by=c("country" = "entity")) %>%
slice_max(forest_ha, n=15) %>%
mutate(col_y = rank(forest_ha) %>% data_rescale(to=c(40, 70)),sigmoid_end = 52,
col_x_start = 55,col_x_end = forest_ha %>% data_rescale(to=c(55, 130), range = c(0, max(forest_ha))),
area_label = paste0(round(forest_ha, 1), " million ha"))
ggplot(line_data)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen")
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha))
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha))
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3)
ggplot(line_data) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off")
ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
line_data %>% ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
scale_fill_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
scale_color_gradientn(colors=met.brewer("VanGogh3", type="continuous")) +
theme_deforestation()
theme_niwot <-  function() {
theme_void() +
theme(
plot.background = element_rect(fill = "lightblue1"),
plot.title = element_text(family = "Roboto Condensed", size = 18, hjust=0.5),
plot.caption = element_text(family = "Roboto Condensed", size = 6),
axis.text.y.left = element_blank(),
axis.text.x.bottom = element_blank(),
legend.position = "none",
text=element_text(family = "Roboto Condensed")
)
}
library(tidyverse)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(datawizard)
library(MetBrewer)
library(ggbump)
theme_niwot <-  function() {
theme_void() +
theme(
plot.background = element_rect(fill="lightblue1"),
plot.title = element_text(size = 18, hjust=0.5),
axis.text.y.left = element_blank(),
axis.text.x.bottom = element_blank(),
legend.position = "none"
)
}
world <- ne_countries(scale = "medium", returnclass = "sf")
map <- world %>%
filter(continent == "Europe", iso_a2 != "RU") %>%
st_crop(xmin = -24, xmax = 40, ymin = 33, ymax = 74)
ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
theme_niwot()
points <- map %>% st_point_on_surface() %>% st_coordinates() %>% as_tibble() %>%
mutate(country=map$name_long)
ggplot(points) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y)) +
geom_text(aes(x=X, y=Y,label=country),hjust=0, nudge_x=1, check_overlap=TRUE) +
theme_niwot()
forest_area <- read_csv("data.txt") %>% filter(year == 2020) %>%
mutate(forest_ha = 4200000000 * (forest_area/100) / 1000000) %>%
select(entity, forest_ha)
line_data <-
points %>% left_join(forest_area, by=c("country" = "entity")) %>%
slice_max(forest_ha, n=15) %>%
mutate(col_y = rank(forest_ha) %>% data_rescale(to=c(40, 70)),sigmoid_end = 52,
col_x_start = 55,col_x_end = forest_ha %>% data_rescale(to=c(55, 130), range = c(0, max(forest_ha))),
area_label = paste0(round(forest_ha, 1), " million ha"))
line_data %>% ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
theme_niwot()
line_data %>% ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha))
line_data %>% ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3)
line_data %>% ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
theme_niwot()
line_data %>% ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen")
points %>% left_join(forest_area, by=c("country" = "entity")) %>%
slice_max(forest_ha, n=15) %>%
mutate(col_y = rank(forest_ha) %>% data_rescale(to=c(40, 70)),sigmoid_end = 52,
col_x_start = 55,col_x_end = forest_ha %>% data_rescale(to=c(55, 130), range = c(0, max(forest_ha))),
area_label = paste0(round(forest_ha, 1), " million ha"))
ead_csv("data.txt") %>% filter(year == 2020) %>%
mutate(forest_ha = 4200000000 * (forest_area/100) / 1000000) %>%
select(entity, forest_ha)
read_csv("data.txt") %>% filter(year == 2020) %>%
mutate(forest_ha = 4200000000 * (forest_area/100) / 1000000) %>%
select(entity, forest_ha)
ne_countries(scale = "medium", returnclass = "sf")
world %>%
filter(continent == "Europe", iso_a2 != "RU") %>%
st_crop(xmin = -24, xmax = 40, ymin = 33, ymax = 74)
world <- ne_countries(scale = "medium", returnclass = "sf")
world %>%
filter(continent == "Europe", iso_a2 != "RU") %>%
st_crop(xmin = -24, xmax = 40, ymin = 33, ymax = 74)
ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
theme_niwot()
map %>% st_point_on_surface() %>% st_coordinates() %>% as_tibble() %>%
mutate(country=map$name_long)
ggplot(points) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y)) +
geom_text(aes(x=X, y=Y,label=country),hjust=0, nudge_x=1, check_overlap=TRUE) +
theme_niwot()
ggplot(points) +
geom_sf(data=map, color="lightblue1", fill="green") +
geom_point(aes(x=X, y=Y)) +
geom_text(aes(x=X, y=Y,label=country),hjust=0, nudge_x=1, check_overlap=TRUE) +
theme_niwot()
ggplot(points) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y))
ggplot(points) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y)) +
geom_text(aes(x=X, y=Y,label=country),hjust=0, nudge_x=1, check_overlap=TRUE) +
theme_niwot()
forest_area <- read_csv("data.txt") %>% filter(year == 2020) %>%
mutate(forest_ha = 4200000000 * (forest_area/100) / 1000000) %>%
select(entity, forest_ha)
line_data <-
points %>% left_join(forest_area, by=c("country" = "entity")) %>%
slice_max(forest_ha, n=15) %>%
mutate(col_y = rank(forest_ha) %>% data_rescale(to=c(40, 70)),sigmoid_end = 52,
col_x_start = 55,col_x_end = forest_ha %>% data_rescale(to=c(55, 130),range = c(0, max(forest_ha))),
area_label = paste0(round(forest_ha, 1), " million ha"))
line_data %>% ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
theme_niwot()
ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
theme_niwot()
map %>% st_point_on_surface() %>% st_coordinates() %>% as_tibble() %>%
mutate(country=map$name_long)
ggplot(points) +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y)) +
geom_text(aes(x=X, y=Y,label=country),hjust=0, nudge_x=1, check_overlap=TRUE) +
theme_niwot()
line_data %>% ggplot() +
geom_sf(data=map, color="lightblue1", fill="forestgreen") +
geom_point(aes(x=X, y=Y, color=forest_ha)) +
geom_sigmoid(aes(x=X, y=Y, xend=sigmoid_end, yend=col_y, group=country, color=forest_ha)) +
geom_text(aes(label=country, x=sigmoid_end, y=col_y),hjust=1, size=2, vjust=0, nudge_y = 0.5, alpha=0.8) +
geom_segment(aes(x=col_x_start, xend=col_x_end, y=col_y, yend=col_y, color=forest_ha),size=3) +
geom_text(aes(label=area_label, x=col_x_end, y=col_y), hjust=0, size=2.2, nudge_x = .3) +
coord_sf(clip = "off") +
theme_niwot()
